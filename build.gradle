plugins {
	id 'java'
	id 'jacoco'
	//id 'checkstyle'
	id 'org.springframework.boot' version '3.1.9'
	id 'io.spring.dependency-management' version '1.1.4'
	//id 'com.diffplug.spotless' version '6.22.0'
	id 'org.openapi.generator' version '7.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.4.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-gson', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-orgjson', version: '0.12.6'
	//compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'
	//implementation group: 'com.puppycrawl.tools', name: 'checkstyle', version: '10.17.0'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation group: 'com.diffplug.spotless', name: 'spotless-lib', version: '2.34.1'
	implementation group: 'com.diffplug.spotless', name: 'spotless-plugin-gradle', version: '6.22.0'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.12.0'
	implementation group: 'org.openapitools', name: 'openapi-generator-gradle-plugin', version: '7.8.0'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
	implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

//checkstyle {
//	toolVersion = '10.17.0'
//	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
//	ignoreFailures = false
//	showViolations = true
//
//}
//
//checkstyleMain.source = "src/main/java"

springBoot {
	mainClass = 'com.example.TiendaOnlineApplication'
}

//spotless {
//	java {
//		target fileTree('.') {
//			include '**/*.java'
//			exclude '**/build/**', '**/build-*/**'
//		}
//		toggleOffOn()
//		palantirJavaFormat()
//		removeUnusedImports()
//		trimTrailingWhitespace()
//		endWithNewline()
//	}
//}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacoco {
	toolVersion = "0.8.12"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/openapi.yaml".toString() // Ruta al archivo YAML
	outputDir = "$buildDir/generated".toString() // Directorio donde se generan los archivos
	apiPackage = "com.example.apis" // Paquete de las interfaces API generadas
	additionalProperties = [modelNameSuffix:'Dto', modelBuilder: true]
	configOptions = ["interfaceOnly":"true", "useTags":"true"]

}

sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/src/main/java"
		}
	}
}

tasks.named('compileJava') {
	dependsOn tasks.named('openApiGenerate')
}
